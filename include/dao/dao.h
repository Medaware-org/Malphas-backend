/**
 * This file was generated by the Malphas DAO generator
 */

#pragma once

#include <string>
#include <any>
#include <libpq-fe.h>

static bool dao_query(PGconn *conn, std::string query, ExecStatusType assert_status)
{
        PGresult *res = PQexec(conn, query.c_str());

        bool status = true;

        if (PQresultStatus(res) != assert_status)
                status = false;

        PQclear(res);
        return status;
}

struct user {
	std::string id;
	std::string nickname;
	std::string passwd_hash;
};

bool user_insert(PGconn *conn, std::string id, std::string nickname, std::string passwd_hash) {
	std::string query = "INSERT INTO user (id, nickname, passwd_hash) VALUES (" + id + ", \"" + nickname + "\", \"" + passwd_hash + "\")";
	return dao_query(conn, query, PGRES_COMMAND_OK);
}

struct session {
	std::string user_id;
	std::string session_token;
};

bool session_insert(PGconn *conn, std::string user_id, std::string session_token) {
	std::string query = "INSERT INTO session (user_id, session_token) VALUES (" + user_id + ", \"" + session_token + "\")";
	return dao_query(conn, query, PGRES_COMMAND_OK);
}

