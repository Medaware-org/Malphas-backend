[get_session_user]
type = single
query = SELECT * FROM "user" u INNER JOIN session s on s.user_id = u.id WHERE s.session_token = ?;
mapping = user
params = user_id=std::string;

[get_sessions_of_user]
type = multiple
query = SELECT * FROM session s WHERE s.user_id = ?;
mapping = session
params = user_id=std::string;

[get_user_by_username]
type = single
query = SELECT * FROM "user" u WHERE u.nickname = ?;
mapping = user
params = username=std::string;

[get_scenes_of_user]
type = multiple
query = SELECT * FROM scene s WHERE s.author = ?;
mapping = scene
params = user_id=std::string;

[invalidate_session]
type = command
query = UPDATE session s SET s.invalidated = true WHERE s.session_token = ?;
params = session_token=std::string;

[delete_wire]
type = command
query = DELETE from wire w where w.id = ?;
params = id=std::string;

[delete_circuit]
type = command
query = DELETE from circuit c where c.id = ?;
params = id=std::string;

[update_circuit_location]
type = command
query = update circuit set location_x = ?, location_y = ? where id = ?;
params = location_x=int;location_y=int;id=std::string;

[update_circuit_location_x]
type = command
query = update circuit set location_x = ? where id = ?;
params = location_x=int;id=std::string;

[update_circuit_location_y]
type = command
query = update circuit set location_y = ? where id = ?;
params = location_y=int;id=std::string;

[update_circuit_parent_circuit]
type = command
query = update circuit set parent_circuit = ? where id = ?;
params = parent_circuit=std::string;id=std::string;

[update_circuit_gate_type]
type = command
query = update circuit set gate_type = ? where id = ?;
params = gate_type=std::string;id=std::string;

[get_circuits_in_scene]
type = multiple
mapping = circuit
query = SELECT * FROM circuit c WHERE c.parent_scene = ?;
params = scene=std::string;

[scene_delete]
type = command
query = DELETE FROM scene s WHERE s.id = ? AND s.author = ?;
params = id=std::string;user_id=std::string;

[scene_update_basic]
type = command
query = UPDATE scene SET scene_name = ?, description = ? WHERE id = ? and author = ?;
params = new_name=std::string;new_description=std::string;id=std::string;user_id=std::string;

[get_wires_in_scene]
type = multiple
query = SELECT w.* FROM wire w INNER JOIN circuit c1 on c1.id = w.source_circuit INNER JOIN circuit c2 on c2.id = w.target_circuit WHERE c1.parent_scene = ? AND c2.parent_scene = ?;
mapping = wire
params = scene=std::string;scene2=std::string;